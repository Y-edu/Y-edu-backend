name: Java CD with Gradle

on:
  push:
    branches:
      - "main"
    paths:
      - .github/workflows/CD-api-prod.yml
      - "api/**"
      - "shared/**"
      - "build.gradle.kts"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env :
      working-directory: ./

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create application.yml
        run: |
          echo "${{ secrets.API_APPLICATION_DEV }}" > ./api/src/main/resources/application-dev.yml
          echo "${{ secrets.API_APPLICATION_PROD }}" > ./api/src/main/resources/application-prod.yml

      - name: Copy logback config file
        run: |
          cp ./logback/api-logback-spring.xml  ./api/src/main/resources/logback-spring.xml

      - name: Modify existing JSON file with jq
        run: |
          jq '.private_key = "${{ secrets.SHEET_API_PRIVATE_KEY }}"' ./shared/sheet-support/src/main/resources/key.json > tmp.json && mv tmp.json ./shared/sheet-support/src/main/resources/key.json
          jq '.private_key_id = "${{ secrets.SHEET_API_PRIVATE_KEY_ID }}"' ./shared/sheet-support/src/main/resources/key.json > tmp.json && mv tmp.json ./shared/sheet-support/src/main/resources/key.json


      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew :api:jib
        working-directory: ${{ env.working-directory }}
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SERVER_HOST_PROD }}
          username: ${{ secrets.EC2_SERVER_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY_PROD }}
          envs: GITHUB_SHA
          script: |
            chmod +x /home/ec2-user/config/deploy.sh
            /home/ec2-user/config/deploy.sh
